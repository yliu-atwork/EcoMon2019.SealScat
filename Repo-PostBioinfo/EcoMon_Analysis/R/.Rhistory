getwd()
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/R")
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
library(readxl); library(forcats)
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
library(readxl); library(forcats)
data<-read.excel('For R codes.xlsx',sheet='Transposed')
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
library(readxl); library(forcats)
data<-read_excel('For R codes.xlsx',sheet='Transposed')
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
library(readxl); library(forcats)
data<-read_excel('For R codes.xlsx',sheet='Transposed')
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
library(readxl); library(forcats)
data<-read_excel('For R codes.xlsx',sheet='Transposed')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data <- data[!grepl("MiSeq", data$NGS.Platform),]
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
library(readxl); library(forcats)
data<-read_excel('For R codes.xlsx',sheet='Transposed')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data <- data[!grepl("MiSeq", data$NGS.Platform),]
data<-read_excel('For R codes.xlsx',sheet='Transposed')
data<-read_excel('For R codes.xlsx',sheet='Primer')
data <- data[!grepl("MiSeq", data$NGS.Platform),]
data<-read_excel('For R codes.xlsx',sheet='Primer')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data <- data[!grepl("MiSeq", data$NGS.Platform),]
data<-read_excel('For R codes.xlsx',sheet='Transposed')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data <- data[!grepl("MiSeq", data$NGS.Platform),]
data <- data[grep("Niskin", data$Gear),]
data <- data[grep(2, data$Filtration.Volume)]
data <- data[grep(2, data$Filtration.Volume),]
write.xlsx(data, file="For R codes.xlsx", sheetName = "Niskin-2L-allStns")
install.packages("xlsx"); library("xlsx")
install.packages("installr")
library(installr)
updateR()
> library(installr)
write.xlsx(data, file="For R codes.xlsx", sheetName = "Niskin-2L-allStns")
install.packages("xlsx"); library("xlsx")
write.xlsx(data, file="Niskin-2L-AllStns")
install.packages("xlsx")
library(xlsx)
java -d64 version
java -d64 -version
system("java -version")
library(rJava)
data
{ update R}
install.packages("installr")
library(installr)
updateR()
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
install.packages("xlsx")
library("xlsx")
library(readxl); library(forcats)
data<-read_excel('For R codes.xlsx',sheet='Transposed')
data
?grepl
data <- data[grep("Niskin", data$Gear),]
data <- data[grep(2, data$Filtration.Volume),]
write.xlsx(data, file="Niskin-2L-AllStns")
write.xlsx(data, file="Niskin-2L-AllStns.xlsx")
data <- read_excel('For R codes.xlsx',sheet='Transposed')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data <- data[!grepl("MiSeq", data$NGS.Platform),]
data <- data[grep("Niskin", data$Gear),]
data <- data[grep(2, data$Filtration.Volume),]
write.xlsx(data, file="Niskin-2L-AllStns.xlsx")
data <- read_excel('For R codes.xlsx',sheet='Transposed')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data <- data[!grepl("MiSeq", data$NGS.Platform),]
data <- data[grep(2, data$Filtration.Volume),]
write.xlsx(data,file="2L-AllStns.xlsx")
data1 <- read_excel('For R codes.xlsx',sheet='Transposed')
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data1 <- data[!grepl("MiSeq", data1$NGS.Platform),]
# filter and wrangle data for only Niskin bottle, surface, and 2L samples
data1 <- data1[!grepl("MiSeq", data1$NGS.Platform),]
data1 <- data1[grep("Sfc", data1$Sampling.Depth.Type),]
data1 <- data1[grep(2, data1$Filtration.Volume),]
write.xlsx(data1, file="2L-Sfc-AllStns.xlsx")
?deply::select
?dplyr::select
?mutate
?mutate_at
shan.data <- read_excel('2L-Sfc-Allstns.xlsx',sheet='3.Types.Gears')
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
shan.data <- read_excel('2L-Sfc-Allstns.xlsx',sheet='3.Types.Gears')
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='3.Types.Gears')
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='Three.Gears')
shan.data
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='Three.Gears')
shan.data$Shannon.Index <- diversity(shan.data [-c(1:10)], index="shannon")
# filter and wrangle data for only NextSeq, Niskin bottle, and 2L samples
library(vegan)
shan.data$Shannon.Index <- diversity(shan.data [-c(1:10)], index="shannon")
shan.data
# filter data frame so it does not have all the Seq columns
shan.data <- shan.data %>% dplyr::select(NGS.ID, Depth, Sampling.Depth.Meter, Sampling.Depth.Type, Gear, Filtration.Volume, Region, Station, Shannon.Index,)
write.xlsx(shan.data, file="Shannon.index.xlsx")
Niskin.shan <- shan.data %>%
filter (Gear == "Niskin") %>%
dplyr::select(Shannon.Index)
shann.index
shan.data
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='Three.Gears')
# filter and wrangle data for only NextSeq, Niskin bottle, and 2L samples
library(vegan)
shan.data$Shannon.Index <- diversity(shan.data [-c(1:10)], index="shannon")
# filter data frame so it does not have all the Seq columns
shan.data <- shan.data %>% dplyr::select(NGS.ID, Depth, Sampling.Depth.Meter, Sampling.Depth.Type, Gear, Filtration.Volume, Region, Station, Shannon.Index,)
Niskin.shan <- shan.data %>%
filter (Gear == "Niskin") %>%
dplyr::select(Shannon.Index)
shan.data
row.names(shan.data)
colnames(shan.data)
Niskin.shan <- shan.data %>%
filter (shan.data$Gear == "Niskin") %>%
dplyr::select(Shannon.Index)
shan.data()
dim.data.frame(shan.data)
colnames(shan.data)
# filter data frame so it does not have all the Seq columns
#shan.data <- shan.data %>% dplyr::select(NGS.ID, Depth, Sampling.Depth.Meter, Sampling.Depth.Type, Gear, Filtration.Volume, Region, Station, Shannon.Index,)
#write.xlsx(shan.data, file="Shannon.index.xlsx")
Niskin.shan <- shan.data %>%
filter (Gear == "Niskin") %>%
dplyr::select(Shannon.Index)
object
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='Three.Gears')
shan.data$Shannon.Index <- diversity(shan.data [-c(1:10)], index="shannon")
shan.data$Gear
Niskin.shan <- shan.data %>%
filter (Gear == "Niskin")
# filter data frame so it does not have all the Seq columns
#shan.data <- shan.data %>% dplyr::select(NGS.ID, Depth, Sampling.Depth.Meter, Sampling.Depth.Type, Gear, Filtration.Volume, Region, Station, Shannon.Index,)
#write.xlsx(shan.data, file="Shannon.index.xlsx")
Niskin.shan <- shan.data %>%
filter (Gear == "Niskin", Filtration.Volume == 2) %>%
dplyr::select(Shannon.Index)
# filter data frame so it does not have all the Seq columns
#shan.data <- shan.data %>% dplyr::select(NGS.ID, Depth, Sampling.Depth.Meter, Sampling.Depth.Type, Gear, Filtration.Volume, Region, Station, Shannon.Index,)
#write.xlsx(shan.data, file="Shannon.index.xlsx")
Niskin.shan <- shan.data %>%
filter (Gear == "Niskin", Filtration.Volume = 2) %>%
dplyr::select(Shannon.Index)
install.packages("installr")
library(installr)
updateR()
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Yuan.Liu/Desktop/Bioinformatics_done_locally/EcoMon_Analysis/R")
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='Three.Gears')
library("xlsx")
library(readxl); library(forcats)
shan.data <- read_excel('2L-Sfc-AllStns.xlsx',sheet='Three.Gears')
# filter and wrangle data for only NextSeq, Niskin bottle, and 2L samples
library(vegan)
shan.data$Shannon.Index <- diversity(shan.data [-c(1:10)], index="shannon")
head(shan.data)
